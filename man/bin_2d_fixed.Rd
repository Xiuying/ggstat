% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bin-2d.R
\name{bin_2d_fixed}
\alias{bin_2d_fixed}
\title{Bin in 2d}
\usage{
bin_2d_fixed(x, y, width = NULL, center = NULL, boundary = NULL,
  origin = NULL, terminus = NULL, bins = 30, pad = FALSE,
  closed = NULL)
}
\arguments{
\item{x, y}{Numeric vectors to guess parameters from.}

\item{width}{(Positive real). The width of a bin. For S3 objects, the
  interpretation of width depends on the interpretation
  of the underlying numeric vector. For example, for dates, 1 = 1 day;
  for times 1 = 1 second; and for difftime, the units vary.

  If \code{NULL}, the \code{width} will be derived from the data,
  picking approximately \code{bins} bins with nice widths. You should always
  override this value, exploring multiple widths to find the best to
  illustrate the stories in your data.}

\item{center}{Set the position of the first bin by specifying
  the position of either a boundary or the center of a bin.
  For example, you can always center the bins on integers with
  \code{center = 0} regardless of where the first bin actually falls.

  Think of binning as tiling the real line into a infinite sequence of
  intervals. \code{center} and \code{boundary} set the position of
  one of those intervals.}

\item{boundary}{Set the position of the first bin by specifying
  the position of either a boundary or the center of a bin.
  For example, you can always center the bins on integers with
  \code{center = 0} regardless of where the first bin actually falls.

  Think of binning as tiling the real line into a infinite sequence of
  intervals. \code{center} and \code{boundary} set the position of
  one of those intervals.}

\item{origin}{The locations of the left-most and right-most bins.
Any values outside this range will be treated as missing. You should
usually leave \code{origin} as \code{NULL} so that it is automatically
computed from \code{center} and \code{boundary}.}

\item{terminus}{The locations of the left-most and right-most bins.
Any values outside this range will be treated as missing. You should
usually leave \code{origin} as \code{NULL} so that it is automatically
computed from \code{center} and \code{boundary}.}

\item{bins}{Number of bins to use if not specified. Pretty bin sizes are
preferred over matching this value exactly.}

\item{pad}{If \code{TRUE}, adds empty bins at either end of x. This ensures
frequency polygons touch 0 outside the range of x. Defaults to \code{FALSE}.}

\item{closed}{One of \code{"right"} or \code{"left"} indicating whether the
bin interval is left-closed (i.e. [a, b)), or right-closed (i.e. (a, b]).}
}
\description{
Each argument can either be \code{NULL}, a vector of length 1 (which
will be used for both x and y directions), or a vector of length 2.
}
\examples{
bin_2d_fixed(runif(100), runif(100))
bin_2d_fixed(runif(100), runif(100), origin = 0)
bin_2d_fixed(runif(100), runif(100), width = 0.25)
bin_2d_fixed(runif(100), runif(100), bins = c(10, 100))

mat <- MASS::mvrnorm(1e6, mu = c(0, 0), matrix(c(1,0.5,0.5,1),2,2))
bins <- bin_2d_fixed(c(-3, 3), c(-3, 3))
system.time(out <- compute_stat(bins, mat[, 1], mat[, 2]))
}

